<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapperXml.ArticleMapper" >
  <resultMap id="BaseResultMap" type="entity.Article" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="agree_num" property="agreeNum" jdbcType="VARCHAR" />
    <result column="disagree_num" property="disagreeNum" jdbcType="VARCHAR" />
    <result column="clicks" property="clicks" jdbcType="VARCHAR" />
    <result column="custom_tags" property="customTags" jdbcType="VARCHAR" />
    <result column="classification_id" property="classificationId" jdbcType="INTEGER" />
    <result column="image" property="image" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="entity.Article" extends="BaseResultMap" >
    <result column="text_body" property="textBody" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, title, created_time, agree_num, disagree_num, clicks, custom_tags, classification_id, 
    image
  </sql>
  <sql id="Blob_Column_List" >
    text_body
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="entity.ArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="entity.ArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="entity.ArticleExample" >
    delete from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.Article" >
    insert into article (id, user_id, title, 
      created_time, agree_num, disagree_num, 
      clicks, custom_tags, classification_id, 
      image, text_body)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{agreeNum,jdbcType=VARCHAR}, #{disagreeNum,jdbcType=VARCHAR}, 
      #{clicks,jdbcType=VARCHAR}, #{customTags,jdbcType=VARCHAR}, #{classificationId,jdbcType=INTEGER}, 
      #{image,jdbcType=VARCHAR}, #{textBody,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="entity.Article" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="agreeNum != null" >
        agree_num,
      </if>
      <if test="disagreeNum != null" >
        disagree_num,
      </if>
      <if test="clicks != null" >
        clicks,
      </if>
      <if test="customTags != null" >
        custom_tags,
      </if>
      <if test="classificationId != null" >
        classification_id,
      </if>
      <if test="image != null" >
        image,
      </if>
      <if test="textBody != null" >
        text_body,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="agreeNum != null" >
        #{agreeNum,jdbcType=VARCHAR},
      </if>
      <if test="disagreeNum != null" >
        #{disagreeNum,jdbcType=VARCHAR},
      </if>
      <if test="clicks != null" >
        #{clicks,jdbcType=VARCHAR},
      </if>
      <if test="customTags != null" >
        #{customTags,jdbcType=VARCHAR},
      </if>
      <if test="classificationId != null" >
        #{classificationId,jdbcType=INTEGER},
      </if>
      <if test="image != null" >
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="textBody != null" >
        #{textBody,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.ArticleExample" resultType="java.lang.Integer" >
    select count(*) from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update article
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.agreeNum != null" >
        agree_num = #{record.agreeNum,jdbcType=VARCHAR},
      </if>
      <if test="record.disagreeNum != null" >
        disagree_num = #{record.disagreeNum,jdbcType=VARCHAR},
      </if>
      <if test="record.clicks != null" >
        clicks = #{record.clicks,jdbcType=VARCHAR},
      </if>
      <if test="record.customTags != null" >
        custom_tags = #{record.customTags,jdbcType=VARCHAR},
      </if>
      <if test="record.classificationId != null" >
        classification_id = #{record.classificationId,jdbcType=INTEGER},
      </if>
      <if test="record.image != null" >
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.textBody != null" >
        text_body = #{record.textBody,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update article
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      agree_num = #{record.agreeNum,jdbcType=VARCHAR},
      disagree_num = #{record.disagreeNum,jdbcType=VARCHAR},
      clicks = #{record.clicks,jdbcType=VARCHAR},
      custom_tags = #{record.customTags,jdbcType=VARCHAR},
      classification_id = #{record.classificationId,jdbcType=INTEGER},
      image = #{record.image,jdbcType=VARCHAR},
      text_body = #{record.textBody,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update article
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      agree_num = #{record.agreeNum,jdbcType=VARCHAR},
      disagree_num = #{record.disagreeNum,jdbcType=VARCHAR},
      clicks = #{record.clicks,jdbcType=VARCHAR},
      custom_tags = #{record.customTags,jdbcType=VARCHAR},
      classification_id = #{record.classificationId,jdbcType=INTEGER},
      image = #{record.image,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Article" >
    update article
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="agreeNum != null" >
        agree_num = #{agreeNum,jdbcType=VARCHAR},
      </if>
      <if test="disagreeNum != null" >
        disagree_num = #{disagreeNum,jdbcType=VARCHAR},
      </if>
      <if test="clicks != null" >
        clicks = #{clicks,jdbcType=VARCHAR},
      </if>
      <if test="customTags != null" >
        custom_tags = #{customTags,jdbcType=VARCHAR},
      </if>
      <if test="classificationId != null" >
        classification_id = #{classificationId,jdbcType=INTEGER},
      </if>
      <if test="image != null" >
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="textBody != null" >
        text_body = #{textBody,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="entity.Article" >
    update article
    set user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      agree_num = #{agreeNum,jdbcType=VARCHAR},
      disagree_num = #{disagreeNum,jdbcType=VARCHAR},
      clicks = #{clicks,jdbcType=VARCHAR},
      custom_tags = #{customTags,jdbcType=VARCHAR},
      classification_id = #{classificationId,jdbcType=INTEGER},
      image = #{image,jdbcType=VARCHAR},
      text_body = #{textBody,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Article" >
    update article
    set user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      agree_num = #{agreeNum,jdbcType=VARCHAR},
      disagree_num = #{disagreeNum,jdbcType=VARCHAR},
      clicks = #{clicks,jdbcType=VARCHAR},
      custom_tags = #{customTags,jdbcType=VARCHAR},
      classification_id = #{classificationId,jdbcType=INTEGER},
      image = #{image,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>